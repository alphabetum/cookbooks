# Generated by chef

safe do
  <% if @node[:astrails_safe][:local] %>
  <%= %Q[local :path => "#{@node[:astrails_safe][:local][:path]}"] if @node[:astrails_safe][:local][:path] %>
  <% end %>
  <% if @node[:astrails_safe][:s3] %>
  s3 do
    <%= %Q[key "#{@node[:astrails_safe][:s3][:key]}"]       if @node[:astrails_safe][:s3][:key]     %>
    <%= %Q[secret "#{@node[:astrails_safe][:s3][:secret]}"] if @node[:astrails_safe][:s3][:secret]  %>
    <%= %Q[bucket "#{@node[:astrails_safe][:s3][:bucket]}"] if @node[:astrails_safe][:s3][:bucket]  %>
    <%= %Q[path "#{@node[:astrails_safe][:s3][:path]}"]     if @node[:astrails_safe][:s3][:path]    %>
  end
  <% end %>
  <% if @node[:astrails_safe][:sftp] %>
  sftp do
    <%= %Q[host "#{@node[:astrails_safe][:sftp][:host]}"]         if @node[:astrails_safe][:sftp][:host]      %>
    <%= %Q[user "#{@node[:astrails_safe][:sftp][:user]}"]         if @node[:astrails_safe][:sftp][:user]      %>
    <%= %Q[password "#{@node[:astrails_safe][:sftp][:password]}"] if @node[:astrails_safe][:sftp][:password]  %>
  end
  <% end %>
  <% if @node[:astrails_safe][:gpg] %>
  gpg do
    <% if @node[:astrails_safe][:gpg][:password] %>
    # symmetric encryption key
    password "<%= @node[:astrails_safe][:gpg][:password] %>"
    <% end %>
    <% if @node[:astrails_safe][:gpg][:key] %>
    # public GPG key (must be known to GPG, i.e. be on the keyring)
    key "<%= @node[:astrails_safe][:gpg][:key] %>"
    <% end %>
  end
  <% end %>
  <% if @node[:astrails_safe][:keep] %>
  keep do
    <%= %Q[local #{@node[:astrails_safe][:keep][:local]}] if @node[:astrails_safe][:keep][:local] %>
    <%= %Q[s3 #{@node[:astrails_safe][:keep][:s3]}]       if @node[:astrails_safe][:keep][:s3]    %>
  end
  <% end %>
  <% if @node[:astrails_safe][:mysqldump] %>
  mysqldump do
    options "-ceKq --single-transaction --create-options"
  
    <%= %Q[user "#{@node[:astrails_safe][:mysqldump][:user]}"]         if @node[:astrails_safe][:mysqldump][:user]      %>
    <%= %Q[password "#{@node[:astrails_safe][:mysqldump][:password]}"] if @node[:astrails_safe][:mysqldump][:password]  %>
    <%= %Q[socket "#{@node[:astrails_safe][:mysqldump][:socket]}"]     if @node[:astrails_safe][:mysqldump][:socket]    %>
    
    <% @node[:astrails_safe][:pgdump][:databases].to_a.each do |d| %>
    <% if d.respond_to?(:each_pair) %>
    <% d.each_pair do |k, v| %>
    database "<%= k %>" do
      skip_tables v.inspect 
    end
    <% end %>
    <% else %>
    database "<%= d %>"
    <% end %>
    <% end %>
  end
  <% end %>
  <% if @node[:astrails_safe][:svndump] %>
  svndump do
    repo "<%= @node[:astrails_safe][:svndump][:repo] %>" do
      repo_path "<%= @node[:astrails_safe][:svndump][:repo_path] %>"
    end
  end
  <% end %>
  <% if @node[:astrails_safe][:pgdump] %>
  pgdump do
    # -i => ignore version, -x => do not dump privileges (grant/revoke), -O => skip restoration of object ownership in plain text format
    options "-i -x -O"
  
    <%= %Q[user "#{@node[:astrails_safe][:pgdump][:user]}"] if @node[:astrails_safe][:pgdump][:user] %>
    
    <% if @node[:astrails_safe][:pgdump][:password] %>
    # shouldn't be used, instead setup ident.  Current functionality exports a password env to the shell which pg_dump uses - untested!
    password "<%= @node[:astrails_safe][:pgdump][:password] %>"
    <% end %>
    
    <% @node[:astrails_safe][:pgdump][:databases].to_a.each do |d| %>
    database "<%= d %>"
    <% end %>
  end
  <% end %>
  <% if @node[:astrails_safe][:tar] %>
  tar do
    <% @node[:astrails_safe][:tar][:archives].each_key do |a| %>
    archive "<%= a %>" do
      <% @node[:astrails_safe][:tar][:archives][a][:files].to_a.each do |f| %>
      files "<%= f %>"
      <% end %>
      <% @node[:astrails_safe][:tar][:archives][a][:excludes].to_a.each do |e| %>
      exclude "<%= e %>"
      <% end %>
    end
    <% end %>
  end
  <% end %>
end
